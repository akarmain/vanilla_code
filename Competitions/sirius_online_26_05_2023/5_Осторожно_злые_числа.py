"""
–ó–ª—ã–º —á–∏—Å–ª–æ–º –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —Å —á—ë—Ç–Ω—ã–º —á–∏—Å–ª–æ–º –µ–¥–∏–Ω–∏—Ü –≤ –µ–≥–æ –¥–≤–æ–∏—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–æ 5 ‚Äî –∑–ª–æ–µ, –≤ –µ–≥–æ –¥–≤–æ–∏—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–≤–µ –µ–¥–∏–Ω–∏—Ü—ã). –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ç–µ–æ—Ä–∏–∏ —á–∏—Å–µ–ª –ø—Ä–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ú–æ—Ä—Å–∞‚Äë–¢—É—ç –∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±—É–¥–µ–º –Ω–∞–∑—ã–≤–∞—Ç—å –æ—á–µ–Ω—å –∑–ª—ã–º, –µ—Å–ª–∏ —Å–∞–º–æ –æ–Ω–æ —á—ë—Ç–Ω–æ–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –≤ –µ–≥–æ –¥–≤–æ–∏—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ —Ç–∞–∫–∂–µ —á—ë—Ç–Ω–æ–µ. –≠—Ç–æ —Ç–∞–∫–∏–µ —á–∏—Å–ª–∞, –∫–∞–∫ 6, 10, 12, 18, 20 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
–ü–æ –¥–∞–Ω–Ω–æ–º—É ùëõ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–µ–Ω—å –∑–ª—ã—Ö —á–∏—Å–µ–ª, –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏—Ö ùëõ.

"""
def count_ones(num):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –µ–¥–∏–Ω–∏—Ü –≤ –¥–≤–æ–∏—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ —á–∏—Å–ª–∞
    binary = bin(num)[2:]  # –ü–æ–ª—É—á–∞–µ–º –¥–≤–æ–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞, –æ—Ç–±—Ä–∞—Å—ã–≤–∞—è –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∞ '0b'
    return binary.count('templates1.ipynb')  # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ 'templates1.ipynb' –≤ —Å—Ç—Ä–æ–∫–µ

def count_very_evil_numbers(n):
    count = 0  # –°—á–µ—Ç—á–∏–∫ –æ—á–µ–Ω—å –∑–ª—ã—Ö —á–∏—Å–µ–ª
    for num in range(1, n + 1):
        if num % 2 == 0 and count_ones(num) % 2 == 0:
            count += 1
    return count

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
mass = []
min_got = 0
all = 10**5
for i in range(all):
    mass.append(count_very_evil_numbers(i))
    print(f"–≥–æ—Ç–æ–≤–æ {i} –∏–∑ {all}")
print(mass)

print()

